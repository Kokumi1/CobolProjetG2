000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. P3EXTRAC.
000300
000400 ENVIRONMENT DIVISION.
000500 CONFIGURATION SECTION.
000600 SPECIAL-NAMES.
000700     DECIMAL-POINT IS COMMA.
000800
000900 INPUT-OUTPUT SECTION.
001000 FILE-CONTROL.
001100        SELECT EXTRACT ASSIGN TO EXT.
001800 DATA DIVISION.
001900 FILE SECTION.
002000 FD EXTRACT.
002100  01 ENR-EXT.
002200     05 EXT-COMPANY      PIC X(30).
002300     05 EXT-ADDRESS      PIC X(100).
002400     05 EXT-CITY         PIC X(20).
002500     05 EXT-ZIP          PIC X(5).
002600     05 EXT-STATE        PIC X(2).
002700     05 EXT-ORDER        PIC 9(4).
002800     05 EXT-DATE         PIC X(10).
002900     05 EXT-DNAME        PIC X(20).
003000     05 EXT-LNAME        PIC X(20).
003100     05 EXT-FNAME        PIC X(20).
003110     05 EXT-COMMISSION   PIC 99V99.
003200     05 EXT-PRODUCT      PIC X(3).
003300     05 EXT-DESCRIPTION  PIC X(30).
003400     05 EXT-QUANTITY     PIC 9(3).
003500     05 EXT-PRICE        PIC 9(3)V9(2).
003501     05 FILLER           PIC X(4).
003502
003503 WORKING-STORAGE SECTION.
003504     EXEC SQL
003505         INCLUDE SQLCA
003506     END-EXEC.
003507     EXEC SQL  INCLUDE CUSTOMER END-EXEC.
003510     EXEC SQL  INCLUDE ORDERS   END-EXEC.
003511     EXEC SQL  INCLUDE EMPLOYE  END-EXEC.
003512     EXEC SQL  INCLUDE DEPTS    END-EXEC.
003513     EXEC SQL  INCLUDE PRODUCTS END-EXEC.
003514     EXEC SQL  INCLUDE ITEMS    END-EXEC.
003515
003516     EXEC SQL
003517        DECLARE CEXTRACT CURSOR
003518        FOR
003519        SELECT C.COMPANY, C.ADDRESS, C.CITY, C.ZIP,C.STATE,
003520         O.O_NO, O.O_DATE, D.DNAME, E.LNAME, E.FNAME,
003521         E.COM,
003522          P.P_NO, P.DESCRIPTION, I.QUANTITY, I.PRICE
003523        FROM API5.ITEMS I
003524         JOIN API5.ORDERS O ON O.O_NO = I.O_NO
003525         JOIN API5.PRODUCTS P ON I.P_NO = P.P_NO
003526         JOIN API5.CUSTOMERS C ON C.C_NO = O.C_NO
003527         JOIN API5.EMPLOYEES E ON E.E_NO = O.S_NO
003528         JOIN API5.DEPTS D ON D.DEPT= E.DEPT
003529         ORDER BY I.O_NO
003530     END-EXEC.
003531
003532 77 INDIC-COMPANY     PIC S9(4) COMP  VALUE -1.
003533 77 INDIC-ADDRESS     PIC S9(4) COMP  VALUE -1.
003534 77 INDIC-CITY        PIC S9(4) COMP  VALUE -1.
003535 77 INDIC-ZIP         PIC S9(4) COMP  VALUE -1.
003536 77 INDIC-STATE       PIC S9(4) COMP  VALUE -1.
003538 77 INDIC-O-DATE      PIC S9(4) COMP  VALUE -1.
003539 77 INDIC-DNAME       PIC S9(4) COMP  VALUE -1.
003540 77 INDIC-LNAME       PIC S9(4) COMP  VALUE -1.
003541 77 INDIC-FNAME       PIC S9(4) COMP  VALUE -1.
003542 77 INDIC-COMMISSION  PIC S9(4) COMP  VALUE -1.
003544 77 INDIC-DESCRIPTION PIC S9(4) COMP  VALUE -1.
003545 77 INDIC-QUANTITY    PIC S9(4) COMP  VALUE -1.
003546 77 INDIC-PRICE       PIC S9(4) COMP  VALUE -1.
003550
003551 77 WS-ID          PIC S9(4)V COMP-3 VALUE 1.
003553 77 WS-VAR    PIC 99 VALUE ZERO.
003554 77 ED-SQLCODE PIC 9(10).
003810
003900 PROCEDURE DIVISION.
004000     EXEC SQL
005147        OPEN CEXTRACT
005149     END-EXEC
005151     PERFORM TEST-SQLCODE
005152     OPEN OUTPUT EXTRACT
005153
005154*    FETCH THE FIRST LINE
005171     PERFORM FETCH-SQL
005172
005173     PERFORM
005174         UNTIL SQLCODE NOT EQUAL ZERO
005175
005181         PERFORM FILE-WRITE
005182         PERFORM FETCH-SQL
006500     END-PERFORM
006501
006502     EXEC SQL
006503        CLOSE CEXTRACT
006504     END-EXEC
006505     CLOSE EXTRACT
006506     GOBACK.
006507
006508
006509*WRITE THE CURSOR CONTENT TO EXTRACT.DATA
006510 FILE-WRITE.
006511     IF INDIC-COMPANY IS NEGATIVE
006512        MOVE ' ' TO EXT-COMPANY
006513     END-IF
006514     MOVE CUS-COMPANY-TEXT(1:CUS-COMPANY-LEN) TO EXT-COMPANY
006515     IF INDIC-ADDRESS IS NEGATIVE
006516        MOVE ' ' TO EXT-ADDRESS
006517     END-IF
006518     MOVE CUS-ADDRESS-TEXT(1:CUS-ADDRESS-LEN) TO EXT-ADDRESS
006519     IF INDIC-CITY IS NEGATIVE
006520        MOVE ' ' TO EXT-CITY
006521     END-IF
006523     MOVE CUS-CITY-TEXT(1:CUS-CITY-LEN) TO EXT-CITY
006524     IF INDIC-STATE IS NEGATIVE
006525        MOVE ' ' TO EXT-STATE
006526     END-IF
006527     MOVE CUS-STATE TO EXT-STATE
006528     IF INDIC-ZIP IS NEGATIVE
006529        MOVE ' ' TO EXT-ZIP
006530     END-IF
006534     MOVE CUS-ZIP   TO EXT-ZIP
006535     MOVE ORDERS-O-NO TO EXT-ORDER
006536     IF INDIC-O-DATE IS NEGATIVE
006537        MOVE 'UNKNOW' TO EXT-DATE
006538     END-IF
006542     MOVE ORDERS-O-DATE TO EXT-DATE
006543     IF INDIC-DNAME   IS NEGATIVE
006544        MOVE ' ' TO EXT-DNAME
006545     END-IF
006549     MOVE DEPTS-DNAME-TEXT(1:DEPTS-DNAME-LEN) TO EXT-DNAME
006550     IF INDIC-LNAME   IS NEGATIVE
006551        MOVE ' ' TO EXT-LNAME
006552     END-IF
006556     MOVE EMP-LNAME-TEXT(1:EMP-LNAME-LEN) TO EXT-LNAME
006557     IF INDIC-FNAME   IS NEGATIVE
006558        MOVE ' ' TO EXT-FNAME
006559     END-IF
006563     MOVE EMP-FNAME-TEXT(1:EMP-FNAME-LEN) TO EXT-FNAME
006564     IF INDIC-FNAME   IS NEGATIVE
006565        MOVE  ZERO TO EXT-COMMISSION
006566     END-IF
006570     MOVE EMP-COM TO EXT-COMMISSION
006571     MOVE PROD-P-NO TO EXT-PRODUCT
006572     IF INDIC-FNAME   IS NEGATIVE
006573        MOVE  ' '  TO EXT-DESCRIPTION
006574     END-IF
006578     MOVE PROD-DESCRIPTION-TEXT(1:PROD-DESCRIPTION-LEN)
006579             TO EXT-DESCRIPTION
006580     IF INDIC-FNAME   IS NEGATIVE
006581        MOVE  ZERO TO EXT-QUANTITY
006582     END-IF
006586     MOVE ITEMS-QUANTITY TO EXT-QUANTITY
006587     IF INDIC-FNAME   IS NEGATIVE
006588        MOVE  ZERO TO EXT-PRICE
006589     END-IF
006590     MOVE ITEMS-PRICE TO EXT-PRICE
006591
006592     DISPLAY ENR-EXT
006593     WRITE ENR-EXT
006594     .
006595
006596 FETCH-SQL.
006597     EXEC SQL
006598         FETCH CEXTRACT
006599         INTO :CUS-COMPANY:INDIC-COMPANY,
006600         :CUS-ADDRESS:INDIC-ADDRESS, :CUS-CITY:INDIC-CITY,
006601         :CUS-ZIP:INDIC-ZIP, :CUS-STATE:INDIC-STATE,
006602         :ORDERS-O-NO ,:ORDERS-O-DATE:INDIC-O-DATE,
006603         :DEPTS-DNAME:INDIC-DNAME, :EMP-LNAME:INDIC-LNAME,
006604         :EMP-FNAME:INDIC-FNAME, :EMP-COM:INDIC-COMMISSION,
006605         :PROD-P-NO,
006606         :PROD-DESCRIPTION:INDIC-DESCRIPTION,
006607         :ITEMS-QUANTITY:INDIC-QUANTITY,
006608         :ITEMS-PRICE:INDIC-PRICE
006609     END-EXEC
006610     PERFORM TEST-SQLCODE
006611     .
006612
006613
006614 TEST-SQLCODE.
006615        EVALUATE TRUE
006616           WHEN SQLCODE = ZERO
006617                CONTINUE
006618           WHEN SQLCODE = 100
006619               DISPLAY 'FINISH!'
006620               CONTINUE
006621           WHEN SQLCODE > ZERO
006622                DISPLAY 'WARNING : ' SQLCODE
006623           WHEN OTHER
006624                MOVE SQLCODE TO ED-SQLCODE
006625                DISPLAY 'ANOMALIE GRAVE : ' ED-SQLCODE
006626                PERFORM ABEND-PROG
006627        END-EVALUATE.
006630 ABEND-PROG.
006700     COMPUTE WS-VAR = 1 / WS-VAR.
